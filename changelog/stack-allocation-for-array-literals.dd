Stack Allocation for Array Literals

When the '==' operator is used on an array literal and another array, the array
literal is placed on the stack. Previous behavior allocated memory on the heap
for the array literal.

In the case of an array literal of structs, the struct dtors are called at the end of
full expression, rather than at an unknown moment in time when GC occurs.

-------
string op;

struct S
{
    char x = 'x';
    this(this) { op ~= x-0x20; }    // upper case
    ~this()    { op ~= x; }         // lower case
}


assert(op == "");
{
    S[3] sx = [S('a'), S('b'), S('c')];
}
assert(op == "cba");
-------
