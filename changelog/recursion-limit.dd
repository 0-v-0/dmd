Add recursion limit selector in dmd cli

A new `-recursion-limit=<num>` switch was added to the dmd cli in order to change the recursion limit of templates and macro depth instead of having it hardcoded to a fixed enum of 500. GCC and clang for C++ also have switches to set this behavior (`-fconstexpr-depth` and `-ftemplate-depth`).

The variable changed is used for
- template instantiation expansion
- macro expansion
- type semantic check (to find infinite recursion)
- expression optimization

If the user does not set the switch the default value of 500 is preserved. Also the value is restored if a user sets an invalid recursion limit of 0.

Example
--------
import std.variant;
import std.conv;

enum NUMBER_OF_STRUCTS = 400;
string autogeneratedStructsString() {
    string output;
    foreach( i ; 0..NUMBER_OF_STRUCTS) 
    {
        output ~= "struct AutogeneratedStruct" ~ i.to!string ~ "{}\n";
    }
    return output;
}
string autogeneratedAlgebraic() {
    string output = "Algebraic!(";
    foreach( i ; 0..NUMBER_OF_STRUCTS)
    {
        output ~= "AutogeneratedStruct" ~ i.to!string ~ (i+1==NUMBER_OF_STRUCTS? "" : ",");
    }
    output ~= ")";
    return output;
}
mixin(autogeneratedStructsString());
alias VariantType = mixin(autogeneratedAlgebraic());

void main(){
    VariantType v = AutogeneratedStruct42();
}
--------
Running the example with a NUMBER_OF_STRUCTS set e.g. to 700 does not compile with the default compiler:
```
[dteod@sirius] build (main $%) $ dmd variantType.d
/usr/include/dlang/dmd/std/typecons.d(9036): Error: template instance `std.variant.pred!(AutogeneratedStruct495)` recursive expansion exceeded allowed nesting limit
[dteod@sirius] build (main $%) $ █
```
but it does with a higher recursion limit:
```
[dteod@sirius] build (main $%) $ dmd variantType.d -recursion-limit=1000
[dteod@sirius] build (main $%) $ █
```

There is also $(LINK2 https://forum.dlang.org/post/hiseqhtgsrdqfumkcjxf@forum.dlang.org, another question) made on the forum that relates to this problem that did not have been solved and was indeed abandoned.

